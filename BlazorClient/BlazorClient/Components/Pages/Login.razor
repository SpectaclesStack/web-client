@page "/login"
@attribute [StreamRendering]
@inject NavigationManager NavigationManager

<PageTitle>Questions</PageTitle>

<h1>Login Github</h1>

<p>Please follow instructions on this page to login</p>

@if (githuburl == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if(authorization){
        <p>Login Successful</p>
    }else{
       <p>Please go to <a href="@githuburl" target="_self">Github Login</a> to complete your signin</p>
    }
    
}

@code {
    private string? githuburl;
    private string? QueryParamValue;
    private string? authCode;
    private string? client_secret;
    private bool authorization = false;

    protected override async Task OnInitializedAsync(){
        string CLIENT_ID = "cddf9a8bc7feeff74c35";
        string redirectUri = "http://localhost:5069/login";
        githuburl = $"https://github.com/login/oauth/authorize?client_id={CLIENT_ID}&redirect_uri={redirectUri}";

        var uri = new Uri(NavigationManager.Uri);
        var queryParam = uri.Query;
        if (!string.IsNullOrEmpty(queryParam))
        {
            var queryParams = System.Web.HttpUtility.ParseQueryString(queryParam);
            authCode = queryParams["code"];
            Console.WriteLine("Printing the granted auth code: ");
            Console.WriteLine(authCode);
        }

        if (!string.IsNullOrEmpty(authCode)){
            try
            {
                using (HttpClient httpClient = new HttpClient())
                {            
                        await Task.Delay(5000);

                        var accessTokenRequest = new HttpRequestMessage(HttpMethod.Post, $"https://github.com/login/oauth/access_token?client_id={CLIENT_ID}&client_secret={client_secret}&code={authCode}");

                        var accessTokenResponse = await httpClient.SendAsync(accessTokenRequest);
                        accessTokenResponse.EnsureSuccessStatusCode();

                        string accessTokenResponseBody = await accessTokenResponse.Content.ReadAsStringAsync();

                        Console.WriteLine("Printing the accesstoken");
                        Console.WriteLine(accessTokenResponse);
                        authorization = true;
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Authentication failed: {ex.Message}");
                
            }   
        }
        
    }

}
